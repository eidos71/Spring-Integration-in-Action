<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:int="http://www.springframework.org/schema/integration"
	xsi:schemaLocation="http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	<int:channel id="monitoringChannel" />
	<!--  -->
	<int:channel id="djConfirmationRequests">
		<!-- if a dj is in the faved by the user has priority -->
		<int:priority-queue comparator="memberHasFavedDj" />
	</int:channel>
	<!--  -->
	<int:service-activator input-channel="djConfirmationRequests"
		output-channel="chargedBookings" ref="billForBookingService" />
	<!--  -->
	<int:channel id="chargedBookings">
		<int:interceptors>
			<ref bean="typeSelectingInterceptor"/>
			<int:wire-tap channel="monitoringChannel" />
		</int:interceptors>
	</int:channel>
	<!-- -->
	<int:service-activator input-channel="chargedBookings"
		output-channel="completedBookings" ref="seatAvailabilityService" />
	<int:publish-subscribe-channel id="completedBookings" />
	<!-- -->
	<int:bridge input-channel="completedBookings"
		output-channel="emailConfirmationRequests" />
	<!-- -->
	<int:channel id="emailConfirmationRequests">
		<int:queue />
	</int:channel>
	<!--  -->
	<int:outbound-channel-adapter channel="emailConfirmationRequests"
		ref="emailConfirmationService" />

	<!--We make sure only Chargedbooking with the right load are selected -->
	<bean id="typeSelector"
		class="org.springframework.integration.selector.PayloadTypeSelector">
		<constructor-arg value="org.siia.tilumusic.channels.ChargedBooking" />
	</bean>
	<bean id="typeSelectingInterceptor"
		class="org.springframework.integration.channel.interceptor.MessageSelectingInterceptor">
		<constructor-arg ref="typeSelector" />
		<!-- -->
	</bean>


</beans>
